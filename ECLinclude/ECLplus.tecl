/*
* Redistribution and use in source and binary forms, with or without modification,
* are permitted provided that the following conditions are met:
*
* 1. Redistributions of source code must retain this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce this list of conditions and the following disclaimer
*    in the documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
* OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
* AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
* OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
* OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#eclmap "ECLplus.eclm"
#ins "2000 m*D"
#ins "2001 m*D"
#ins "2002"
#ins "2003 ffm*D"
#ins "2004 S"
#ins "2005 m"
#ins "2006"
#ins "2007 f"
#ins "2008 S"
#ins "2009 S"
#ins "2010 S"
#ins "2011 S"
#ins "2012 SS"
#ins "2013"
#ins "2014 S"
#ins "2021 Sf"
#ins "2022 SS"

#ins "2100 ff"
#ins "2101"
#ins "2102"
#ins "2103 S"
#ins "2104 S"
#ins "2105 S"
#ins "2106 S"
#ins "2107 S"
#ins "2108 S"
#ins "2109 S"
#ins "2110 f"
#ins "2111 f"

#ins "2200"
#ins "2201 S"
#ins "2202 ffffS"
#ins "2203 SffffS"
#ins "2204 SffffS"
#ins "2205 SS"

#ins "2210 Sfff"
#ins "2211 SS*S"
#ins "2212 SS*S"
#ins "2213 SfffSS*S"
#ins "2214 SffffSS*S"
#ins "2215 SS"
#ins "2216 SS"
#ins "2217 SS"
#ins "2218 SS"
#ins "2219 SS"
#ins "2220 SS"
#ins "2221 SS"
#ins "2222 ffS"
#ins "2223 fS"
#ins "2224 fS"
#ins "2225 SfffffSS*S"

inline void msgWait(int channel) {
	int received = false;
	goto BEGIN;
LOOP:
	wait(1);
BEGIN:
	msgCheck(received, channel);
	unless (received) goto LOOP;
}

inline void ECLplusReset() {
	msgResetAll();
	playerAllowShot(1);
	playerAllowBomb(1);
	GI4 = 0;
	GI5 = 0;
	GI6 = 0;
	GI7 = 0;
}

global KEY_SHOOT = 0x1;
global KEY_BOMB = 0x2;
global KEY_FOCUS = 0x8;
global KEY_UP = 0x10;
global KEY_DOWN = 0x20;
global KEY_LEFT = 0x40;
global KEY_RIGHT = 0x80;
global KEY_C = 0x200;

global PL_DYING = 4;
global PL_DEAD = 2;
global PL_NORMAL = 1;
global PL_RESPAWN = 0;

global ANCHOR_CENTER = 0;
global ANCHOR_LEFT = 1;
global ANCHOR_RIGHT = 2;
global ANCHOR_TOP = 1;
global ANCHOR_BOTTOM = 2;

global PRIORITY_MASTER = 0x01; // Raw Keyboard input, gamemodes, and more
// global PRIORITY_ = 0x02; // Global38
// global PRIORITY_ = 0x04; // Global640
global PRIORITY_ASCII = 0x05;
global PRIORITY_MAIN_MENU = 0x07;
global PRIORITY_ANM_UI = 0x0a;
global PRIORITY_PAUSE = 0x0b;
global PRIORITY_MANUAL = 0x0c;
global PRIORITY_TROPHY = 0x0e;
global PRIORITY_GAMETHREAD = 0x10; // Cutoff for things active during pause
global PRIORITY_GAME_INPUT = 0x11; // Records or reads replay data
global PRIORITY_STAGE = 0x12;
global PRIORITY_SCREEN_FX = 0x14;
global PRIORITY_NUMBER_POPUPS = 0x15;
global PRIORITY_PLAYER = 0x17;
global PRIORITY_BOMB = 0x19;
global PRIORITY_ENEMY = 0x1b;
global PRIORITY_LASER = 0x1c;
global PRIORITY_BULLET = 0x1d;
global PRIORITY_ITEM = 0x1e;
global PRIORITY_GOAST = 0x1f;
global PRIORITY_SPELLCARD = 0x20;
// global PRIORITY_ = 0x21; // Global2020
global PRIORITY_HUD = 0x22;
global PRIORITY_ANM_WORLD = 0x23;
global PRIORITY_REPLAY_SPEEDUP = 0x24;
global PRIORITY_ENDING = 0x25;

global REL_BEFORE = -1;
global REL_DURING = 0;
global REL_AFTER = 1;
